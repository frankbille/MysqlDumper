package dk.frankbille.mysqldumper.ui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import dk.frankbille.mysqldumper.Configuration;
import dk.frankbille.mysqldumper.ConnectionConfiguration;
import dk.frankbille.mysqldumper.sql.MysqlBinaryClient;
import dk.frankbille.mysqldumper.sql.MysqlClient;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class MainWindow extends JDialog {
    private JPanel contentPane;
    private JButton addConnectionButton;
    private JList<ConnectionConfiguration> connectionList;
    private DumpConfigurationPanel dumpConfigurationPanel;
    private JButton buttonOK;

    public MainWindow() {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        Configuration configuration = new Configuration();
        MysqlClient mysqlClient = new MysqlBinaryClient(configuration);

        connectionList.setModel(new ConnectionListModel(configuration));
        connectionList.addListSelectionListener(e -> {
            final ConnectionConfiguration selectedConnectionConfiguration = connectionList.getModel().getElementAt(e.getFirstIndex());
            dumpConfigurationPanel.setConnectionConfiguration(mysqlClient, selectedConnectionConfiguration);
        });
        connectionList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    final int index = connectionList.locationToIndex(e.getPoint());
                    final ConnectionConfiguration connectionConfiguration = connectionList.getModel().getElementAt(index);
                    openConnectionConfigurationWindow(connectionConfiguration);
                }
            }
        });

        addConnectionButton.addActionListener(e -> {
            final ConnectionConfiguration connectionConfiguration = configuration.addNewConnection();
            openConnectionConfigurationWindow(connectionConfiguration);
        });

        if (!mysqlClient.isValidMysqlBinDirectory()) {
            SelectMysqlBinDirectoryWindow selectMysqlBinDirectoryWindow = new SelectMysqlBinDirectoryWindow(configuration);
            selectMysqlBinDirectoryWindow.setSize(600, 300);
            selectMysqlBinDirectoryWindow.setLocationRelativeTo(null);
            selectMysqlBinDirectoryWindow.setVisible(true);
        }
    }

    public static void main(String[] args) {
        MainWindow dialog = new MainWindow();
        dialog.setSize(800, 600);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        System.exit(0);
    }

    private void openConnectionConfigurationWindow(ConnectionConfiguration connectionConfiguration) {
        ConnectionConfigurationWindow configurationWindow = new ConnectionConfigurationWindow(connectionConfiguration);
        configurationWindow.setSize(600, 400);
        configurationWindow.setLocationRelativeTo(null);
        configurationWindow.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        contentPane.setPreferredSize(new Dimension(800, 600));
        contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8), null));
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setDividerLocation(200);
        contentPane.add(splitPane1, BorderLayout.CENTER);
        splitPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow", "center:d:noGrow,top:3dlu:noGrow,center:d:grow"));
        splitPane1.setLeftComponent(panel1);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:d:grow", "center:d:grow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
        CellConstraints cc = new CellConstraints();
        panel1.add(panel2, cc.xy(1, 1));
        addConnectionButton = new JButton();
        addConnectionButton.setText("+");
        panel2.add(addConnectionButton, cc.xy(1, 3, CellConstraints.RIGHT, CellConstraints.CENTER));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.FILL));
        connectionList = new JList();
        scrollPane1.setViewportView(connectionList);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        splitPane1.setRightComponent(panel3);
        dumpConfigurationPanel = new DumpConfigurationPanel();
        panel3.add(dumpConfigurationPanel.$$$getRootComponent$$$(), cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
